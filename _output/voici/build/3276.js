"use strict";(self.webpackChunk_JUPYTERLAB_CORE_OUTPUT=self.webpackChunk_JUPYTERLAB_CORE_OUTPUT||[]).push([[3276,6821],{66821:(e,t,n)=>{n.r(t),n.d(t,{default:()=>P});var r=n(39508),i=n(64098),o=n(55455),s=n(50558);const a=new s.Token("@jupyterlab/markdownviewer:IMarkdownViewerTracker","A widget tracker for markdown\n  document viewers. Use this if you want to iterate over and interact with rendered markdown documents.");var d=n(46630),c=n(88252),l=n(27866),h=n(53968),u=n(23190);const m="text/markdown";class g extends u.Widget{constructor(e){super(),this._config={...g.defaultConfig},this._fragment="",this._ready=new s.PromiseDelegate,this._isRendering=!1,this._renderRequested=!1,this._rendered=new h.Signal(this),this.context=e.context,this.translator=e.translator||l.nullTranslator,this._trans=this.translator.load("jupyterlab"),this.renderer=e.renderer,this.node.tabIndex=0,this.addClass("jp-MarkdownViewer"),(this.layout=new u.StackedLayout).addWidget(this.renderer),this.context.ready.then((async()=>{await this._render(),this._monitor=new o.ActivityMonitor({signal:this.context.model.contentChanged,timeout:this._config.renderTimeout}),this._monitor.activityStopped.connect(this.update,this),this._ready.resolve(void 0)}))}get ready(){return this._ready.promise}get rendered(){return this._rendered}setFragment(e){this._fragment=e,this.update()}setOption(e,t){if(this._config[e]===t)return;this._config[e]=t;const{style:n}=this.renderer.node;switch(e){case"fontFamily":n.setProperty("font-family",t);break;case"fontSize":n.setProperty("font-size",t?t+"px":null);break;case"hideFrontMatter":this.update();break;case"lineHeight":n.setProperty("line-height",t?t.toString():null);break;case"lineWidth":{const e=t?`calc(50% - ${t/2}ch)`:null;n.setProperty("padding-left",e),n.setProperty("padding-right",e);break}case"renderTimeout":this._monitor&&(this._monitor.timeout=t)}}dispose(){this.isDisposed||(this._monitor&&this._monitor.dispose(),this._monitor=null,super.dispose())}onUpdateRequest(e){this.context.isReady&&!this.isDisposed&&(this._render(),this._fragment="")}onActivateRequest(e){this.node.focus()}async _render(){if(this.isDisposed)return;if(this._isRendering)return void(this._renderRequested=!0);this._renderRequested=!1;const{context:e}=this,{model:t}=e,n=t.toString(),r={};r[m]=this._config.hideFrontMatter?f.removeFrontMatter(n):n;const o=new c.MimeModel({data:r,metadata:{fragment:this._fragment}});try{if(this._isRendering=!0,await this.renderer.renderModel(o),this._isRendering=!1,this._renderRequested)return this._render();this._rendered.emit()}catch(t){requestAnimationFrame((()=>{this.dispose()})),(0,i.showErrorMessage)(this._trans.__("Renderer Failure: %1",e.path),t)}}}!function(e){e.defaultConfig={fontFamily:null,fontSize:null,lineHeight:null,lineWidth:null,hideFrontMatter:!0,renderTimeout:1e3}}(g||(g={}));class p extends d.DocumentWidget{setFragment(e){this.content.setFragment(e)}}class w extends d.ABCWidgetFactory{constructor(e){super(f.createRegistryOptions(e)),this._fileType=e.primaryFileType,this._rendermime=e.rendermime}createNewWidget(e){var t,n,r,i,o;const s=this._rendermime.clone({resolver:e.urlResolver}).createRenderer(m),a=new g({context:e,renderer:s});return a.title.icon=null===(t=this._fileType)||void 0===t?void 0:t.icon,a.title.iconClass=null!==(r=null===(n=this._fileType)||void 0===n?void 0:n.iconClass)&&void 0!==r?r:"",a.title.iconLabel=null!==(o=null===(i=this._fileType)||void 0===i?void 0:i.iconLabel)&&void 0!==o?o:"",a.title.caption=this.label,new p({content:a,context:e})}}var f;!function(e){e.createRegistryOptions=function(e){return{...e,readOnly:!0}},e.removeFrontMatter=function(e){const t=e.match(/^---\n[^]*?\n(---|...)\n/);if(!t)return e;const{length:n}=t[0];return e.slice(n)}}(f||(f={}));var y=n(95459),_=n(66514),v=n(19390),k=n(17262);class x extends y.U{constructor(e,t,n){super(e,n),this.parser=t}get documentType(){return"markdown-viewer"}get isAlwaysActive(){return!0}get supportedOptions(){return["maximalDepth","numberingH1","numberHeaders"]}getHeadings(){const e=this.widget.context.model.toString(),t=_.tF(v.o3(e),{...this.configuration,baseNumbering:1});return Promise.resolve(t)}}class R extends k.w{constructor(e,t){super(e),this.parser=t}_createNew(e,t){const n=new x(e,this.parser,t);let r=new WeakMap;const i=(t,n)=>{if(n){const t=r.get(n);if(t){const n=e.content.node.getBoundingClientRect(),r=t.getBoundingClientRect();(r.top>n.bottom||r.bottom<n.top)&&t.scrollIntoView({block:"center"})}else console.warn("Heading element not found for heading",n,"in widget",e)}},o=()=>{this.parser&&(_.Zd(e.content.node),r=new WeakMap,n.headings.forEach((async t=>{var n;const i=await v.N4(this.parser,t.raw,t.level);if(!i)return;const o=`h${t.level}[id="${i}"]`;r.set(t,_.U9(e.content.node,o,null!==(n=t.prefix)&&void 0!==n?n:""))})))};return e.content.ready.then((()=>{o(),e.content.rendered.connect(o),n.activeHeadingChanged.connect(i),n.headingsChanged.connect(o),e.disposed.connect((()=>{e.content.rendered.disconnect(o),n.activeHeadingChanged.disconnect(i),n.headingsChanged.disconnect(o)}))})),n}}var b,T=n(80606),C=n(86992);!function(e){e.markdownPreview="markdownviewer:open",e.markdownEditor="markdownviewer:edit"}(b||(b={}));const F="Markdown Preview",M={activate:function(e,t,n,r,s,a){const d=n.load("jupyterlab"),{commands:l,docRegistry:h}=e;t.addFactory(c.markdownRendererFactory);const u=new i.WidgetTracker({namespace:"markdownviewer-widget"});let m={...g.defaultConfig};function p(e){Object.keys(m).forEach((t=>{var n;e.setOption(t,null!==(n=m[t])&&void 0!==n?n:null)}))}if(s){const e=e=>{m=e.composite,u.forEach((e=>{p(e.content)}))};s.load(M.id).then((t=>{t.changed.connect((()=>{e(t)})),e(t)})).catch((e=>{console.error(e.message)}))}const f=new w({rendermime:t,name:F,label:d.__("Markdown Preview"),primaryFileType:h.getFileType("markdown"),fileTypes:["markdown"],defaultRendered:["markdown"]});return f.widgetCreated.connect(((e,t)=>{t.context.pathChanged.connect((()=>{u.save(t)})),p(t.content),u.add(t)})),h.addWidgetFactory(f),r&&r.restore(u,{command:"docmanager:open",args:e=>({path:e.context.path,factory:F}),name:e=>e.context.path}),l.addCommand(b.markdownPreview,{label:d.__("Markdown Preview"),execute:e=>{const t=e.path;if("string"==typeof t)return l.execute("docmanager:open",{path:t,factory:F,options:e.options})}}),l.addCommand(b.markdownEditor,{execute:()=>{const e=u.currentWidget;if(!e)return;const t=e.context.path;return l.execute("docmanager:open",{path:t,factory:"Editor",options:{mode:"split-right"}})},isVisible:()=>{const e=u.currentWidget;return e&&".md"===o.PathExt.extname(e.context.path)||!1},label:d.__("Show Markdown Editor")}),a&&a.add(new R(u,t.markdownParser)),u},id:"@jupyterlab/markdownviewer-extension:plugin",description:"Adds markdown file viewer and provides its tracker.",provides:a,requires:[c.IRenderMimeRegistry,l.ITranslator],optional:[r.ILayoutRestorer,T.ISettingRegistry,C.wk],autoStart:!0},P=M}}]);